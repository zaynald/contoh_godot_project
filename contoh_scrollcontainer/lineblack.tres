[gd_resource type="CanvasItemMaterial" load_steps=4 format=1]

[ext_resource path="res://linevs.png" type="Texture" id=1]
[ext_resource path="res://bgalpha.png" type="Texture" id=2]

[sub_resource type="CanvasItemShader" id=1]

_code = {
"fragment": "//uniform vec4 u_color_key;
//hint_color;
uniform color warnacari;

uniform texture texmap;
uniform texture texmap2;

color gantiwarna =color(0,0,0,1);
//uniform float u_tolerance;

//color c;
//uniform float screen_h=600;
//uniform float sprite_h=256;
//float sprite_uv_h=sprite_h/screen_h;

//vec2 flipped_screen_uv=vec2(SCREEN_UV.x,SCREEN_UV.y-sprite_uv_h*(1-2*UV.y));
//COLOR=vec4(texscreen(flipped_screen_uv),1);

//vec4 original_color=tex(TEXTURE,UV);
//vec3 sc = texscreen(SCREEN_UV);
vec4 sc2 = tex(texmap,UV);

//vec3 col = original_color.rgb;
//vec3 diff3 = sc-col;



//if(sc2.r==warnacari.r && sc2.g==warnacari.g && sc2.b==warnacari.b ) //ok work
if(sc2.r<=1 && sc2.r>=0.7) //ok work
{
//COLOR=vec4(original_color.rgb,original_color.a);

if(sc2.r<=1){
COLOR =vec4(0,0,0,1);
}

if(sc2.r<=1){
COLOR =vec4(0,0,0,1);
}
if(sc2.r<=0.9){
COLOR =vec4(0.08,0.08,0.08,0.8);
}
if(sc2.r<=0.8){
COLOR =vec4(0.08,0.08,0.08,0.5);
}




//COLOR=vec4(vec3(0,1,0),1);
//COLOR=vec4(original_color.rgb,1);
//COLOR.rgb*=mix(tex(texmap,UV).r,tex(texmap,UV).g,tex(texmap,UV).b);


//texscreen(TEXTURE)=tex(texmap,UV);
}else{
//COLOR=vec4(warnacari.rgb,1);
//ok work
//COLOR.rgb =vec3(0,0,0);
//COLOR.a =0;

COLOR=vec4(vec3(0,0,0),0); //ok work

}
",
"fragment_ofs": 0,
"light": "",
"light_ofs": 0,
"vertex": "",
"vertex_ofs": 0
}

[resource]

shader/shader = SubResource( 1 )
shader/shading_mode = 0
shader_param/warnacari = Color( 0, 0, 0, 1 )
shader_param/texmap = ExtResource( 1 )
shader_param/texmap2 = ExtResource( 2 )

